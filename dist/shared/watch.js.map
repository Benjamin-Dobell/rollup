{"version":3,"file":"watch.js","sources":["../../node_modules/micromatch/index.js","../../node_modules/rollup-pluginutils/src/utils/ensureArray.ts","../../node_modules/rollup-pluginutils/src/createFilter.ts","../../src/watch/fileWatcher.ts","../../src/watch/watch.ts"],"sourcesContent":["'use strict';\n\nconst util = require('util');\nconst braces = require('braces');\nconst picomatch = require('picomatch');\nconst utils = require('picomatch/lib/utils');\nconst isEmptyString = val => typeof val === 'string' && (val === '' || val === './');\n\n/**\n * Returns an array of strings that match one or more glob patterns.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm(list, patterns[, options]);\n *\n * console.log(mm(['a.js', 'a.txt'], ['*.js']));\n * //=> [ 'a.js' ]\n * ```\n * @param {String|Array<string>} list List of strings to match.\n * @param {String|Array<string>} patterns One or more glob patterns to use for matching.\n * @param {Object} options See available [options](#options)\n * @return {Array} Returns an array of matches\n * @summary false\n * @api public\n */\n\nconst micromatch = (list, patterns, options) => {\n  patterns = [].concat(patterns);\n  list = [].concat(list);\n\n  let omit = new Set();\n  let keep = new Set();\n  let items = new Set();\n  let negatives = 0;\n\n  let onResult = state => {\n    items.add(state.output);\n    if (options && options.onResult) {\n      options.onResult(state);\n    }\n  };\n\n  for (let i = 0; i < patterns.length; i++) {\n    let isMatch = picomatch(String(patterns[i]), { ...options, onResult }, true);\n    let negated = isMatch.state.negated || isMatch.state.negatedExtglob;\n    if (negated) negatives++;\n\n    for (let item of list) {\n      let matched = isMatch(item, true);\n\n      let match = negated ? !matched.isMatch : matched.isMatch;\n      if (!match) continue;\n\n      if (negated) {\n        omit.add(matched.output);\n      } else {\n        omit.delete(matched.output);\n        keep.add(matched.output);\n      }\n    }\n  }\n\n  let result = negatives === patterns.length ? [...items] : [...keep];\n  let matches = result.filter(item => !omit.has(item));\n\n  if (options && matches.length === 0) {\n    if (options.failglob === true) {\n      throw new Error(`No matches found for \"${patterns.join(', ')}\"`);\n    }\n\n    if (options.nonull === true || options.nullglob === true) {\n      return options.unescape ? patterns.map(p => p.replace(/\\\\/g, '')) : patterns;\n    }\n  }\n\n  return matches;\n};\n\n/**\n * Backwards compatibility\n */\n\nmicromatch.match = micromatch;\n\n/**\n * Returns a matcher function from the given glob `pattern` and `options`.\n * The returned function takes a string to match as its only argument and returns\n * true if the string is a match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matcher(pattern[, options]);\n *\n * const isMatch = mm.matcher('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @param {String} `pattern` Glob pattern\n * @param {Object} `options`\n * @return {Function} Returns a matcher function.\n * @api public\n */\n\nmicromatch.matcher = (pattern, options) => picomatch(pattern, options);\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.isMatch(string, patterns[, options]);\n *\n * console.log(mm.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(mm.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\n\n/**\n * Backwards compatibility\n */\n\nmicromatch.any = micromatch.isMatch;\n\n/**\n * Returns a list of strings that _**do not match any**_ of the given `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.not(list, patterns[, options]);\n *\n * console.log(mm.not(['a.a', 'b.b', 'c.c'], '*.a'));\n * //=> ['b.b', 'c.c']\n * ```\n * @param {Array} `list` Array of strings to match.\n * @param {String|Array} `patterns` One or more glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Array} Returns an array of strings that **do not match** the given patterns.\n * @api public\n */\n\nmicromatch.not = (list, patterns, options = {}) => {\n  patterns = [].concat(patterns).map(String);\n  let result = new Set();\n  let items = [];\n\n  let onResult = state => {\n    if (options.onResult) options.onResult(state);\n    items.push(state.output);\n  };\n\n  let matches = micromatch(list, patterns, { ...options, onResult });\n\n  for (let item of items) {\n    if (!matches.includes(item)) {\n      result.add(item);\n    }\n  }\n  return [...result];\n};\n\n/**\n * Returns true if the given `string` contains the given pattern. Similar\n * to [.isMatch](#isMatch) but the pattern can match any part of the string.\n *\n * ```js\n * var mm = require('micromatch');\n * // mm.contains(string, pattern[, options]);\n *\n * console.log(mm.contains('aa/bb/cc', '*b'));\n * //=> true\n * console.log(mm.contains('aa/bb/cc', '*d'));\n * //=> false\n * ```\n * @param {String} `str` The string to match.\n * @param {String|Array} `patterns` Glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if the patter matches any part of `str`.\n * @api public\n */\n\nmicromatch.contains = (str, pattern, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\n  }\n\n  if (Array.isArray(pattern)) {\n    return pattern.some(p => micromatch.contains(str, p, options));\n  }\n\n  if (typeof pattern === 'string') {\n    if (isEmptyString(str) || isEmptyString(pattern)) {\n      return false;\n    }\n\n    if (str.includes(pattern) || (str.startsWith('./') && str.slice(2).includes(pattern))) {\n      return true;\n    }\n  }\n\n  return micromatch.isMatch(str, pattern, { ...options, contains: true });\n};\n\n/**\n * Filter the keys of the given object with the given `glob` pattern\n * and `options`. Does not attempt to match nested keys. If you need this feature,\n * use [glob-object][] instead.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matchKeys(object, patterns[, options]);\n *\n * const obj = { aa: 'a', ab: 'b', ac: 'c' };\n * console.log(mm.matchKeys(obj, '*b'));\n * //=> { ab: 'b' }\n * ```\n * @param {Object} `object` The object with keys to filter.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Object} Returns an object with only keys that match the given patterns.\n * @api public\n */\n\nmicromatch.matchKeys = (obj, patterns, options) => {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('Expected the first argument to be an object');\n  }\n  let keys = micromatch(Object.keys(obj), patterns, options);\n  let res = {};\n  for (let key of keys) res[key] = obj[key];\n  return res;\n};\n\n/**\n * Returns true if some of the strings in the given `list` match any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.some(list, patterns[, options]);\n *\n * console.log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // true\n * console.log(mm.some(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test. Returns as soon as the first match is found.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.some = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch(String(pattern), options);\n    if (items.some(item => isMatch(item))) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns true if every string in the given `list` matches\n * any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.every(list, patterns[, options]);\n *\n * console.log(mm.every('foo.js', ['foo.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // false\n * console.log(mm.every(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.every = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch(String(pattern), options);\n    if (!items.every(item => isMatch(item))) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Returns true if **all** of the given `patterns` match\n * the specified string.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.all(string, patterns[, options]);\n *\n * console.log(mm.all('foo.js', ['foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', '!foo.js']));\n * // false\n *\n * console.log(mm.all('foo.js', ['*.js', 'foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js']));\n * // true\n * ```\n * @param {String|Array} `str` The string to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch.all = (str, patterns, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\n  }\n\n  return [].concat(patterns).every(p => picomatch(p, options)(str));\n};\n\n/**\n * Returns an array of matches captured by `pattern` in `string, or `null` if the pattern did not match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.capture(pattern, string[, options]);\n *\n * console.log(mm.capture('test/*.js', 'test/foo.js'));\n * //=> ['foo']\n * console.log(mm.capture('test/*.js', 'foo/bar.css'));\n * //=> null\n * ```\n * @param {String} `glob` Glob pattern to use for matching.\n * @param {String} `input` String to match\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns an array of captures if the input matches the glob pattern, otherwise `null`.\n * @api public\n */\n\nmicromatch.capture = (glob, input, options) => {\n  let posix = utils.isWindows(options);\n  let regex = picomatch.makeRe(String(glob), { ...options, capture: true });\n  let match = regex.exec(posix ? utils.toPosixSlashes(input) : input);\n\n  if (match) {\n    return match.slice(1).map(v => v === void 0 ? '' : v);\n  }\n};\n\n/**\n * Create a regular expression from the given glob `pattern`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.makeRe(pattern[, options]);\n *\n * console.log(mm.makeRe('*.js'));\n * //=> /^(?:(\\.[\\\\\\/])?(?!\\.)(?=.)[^\\/]*?\\.js)$/\n * ```\n * @param {String} `pattern` A glob pattern to convert to regex.\n * @param {Object} `options`\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\nmicromatch.makeRe = (...args) => picomatch.makeRe(...args);\n\n/**\n * Scan a glob pattern to separate the pattern into segments. Used\n * by the [split](#split) method.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm.scan(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\nmicromatch.scan = (...args) => picomatch.scan(...args);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm(pattern[, options]);\n * ```\n * @param {String} `glob`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as regex source string.\n * @api public\n */\n\nmicromatch.parse = (patterns, options) => {\n  let res = [];\n  for (let pattern of [].concat(patterns || [])) {\n    for (let str of braces(String(pattern), options)) {\n      res.push(picomatch.parse(str, options));\n    }\n  }\n  return res;\n};\n\n/**\n * Process the given brace `pattern`.\n *\n * ```js\n * const { braces } = require('micromatch');\n * console.log(braces('foo/{a,b,c}/bar'));\n * //=> [ 'foo/(a|b|c)/bar' ]\n *\n * console.log(braces('foo/{a,b,c}/bar', { expand: true }));\n * //=> [ 'foo/a/bar', 'foo/b/bar', 'foo/c/bar' ]\n * ```\n * @param {String} `pattern` String with brace pattern to process.\n * @param {Object} `options` Any [options](#options) to change how expansion is performed. See the [braces][] library for all available options.\n * @return {Array}\n * @api public\n */\n\nmicromatch.braces = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  if ((options && options.nobrace === true) || !/\\{.*\\}/.test(pattern)) {\n    return [pattern];\n  }\n  return braces(pattern, options);\n};\n\n/**\n * Expand braces\n */\n\nmicromatch.braceExpand = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  return micromatch.braces(pattern, { ...options, expand: true });\n};\n\n/**\n * Expose micromatch\n */\n\nmodule.exports = micromatch;\n","export default function ensureArray<T>(thing: Array<T> | T | undefined | null): Array<T> {\n\tif (Array.isArray(thing)) return thing;\n\tif (thing == undefined) return [];\n\treturn [thing];\n}\n","import mm from 'micromatch';\nimport { resolve, sep } from 'path';\nimport { CreateFilter } from './pluginutils';\nimport ensureArray from './utils/ensureArray';\n\nfunction getMatcherString(id: string, resolutionBase: string | false | null | undefined) {\n\tif (resolutionBase === false) {\n\t\treturn id;\n\t}\n\treturn resolve(...(typeof resolutionBase === 'string' ? [resolutionBase, id] : [id]));\n}\n\nconst createFilter: CreateFilter = function createFilter(include?, exclude?, options?) {\n\tconst resolutionBase = options && options.resolve;\n\n\tconst getMatcher = (id: string | RegExp) => {\n\t\treturn id instanceof RegExp\n\t\t\t? id\n\t\t\t: {\n\t\t\t\t\ttest: mm.matcher(\n\t\t\t\t\t\tgetMatcherString(id, resolutionBase)\n\t\t\t\t\t\t\t.split(sep)\n\t\t\t\t\t\t\t.join('/'),\n\t\t\t\t\t\t{ dot: true }\n\t\t\t\t\t)\n\t\t\t  };\n\t};\n\n\tconst includeMatchers = ensureArray(include).map(getMatcher);\n\tconst excludeMatchers = ensureArray(exclude).map(getMatcher);\n\n\treturn function(id: string | any): boolean {\n\t\tif (typeof id !== 'string') return false;\n\t\tif (/\\0/.test(id)) return false;\n\n\t\tid = id.split(sep).join('/');\n\n\t\tfor (let i = 0; i < excludeMatchers.length; ++i) {\n\t\t\tconst matcher = excludeMatchers[i];\n\t\t\tif (matcher.test(id)) return false;\n\t\t}\n\n\t\tfor (let i = 0; i < includeMatchers.length; ++i) {\n\t\t\tconst matcher = includeMatchers[i];\n\t\t\tif (matcher.test(id)) return true;\n\t\t}\n\n\t\treturn !includeMatchers.length;\n\t};\n};\n\nexport { createFilter as default };\n","import chokidar, { FSWatcher } from 'chokidar';\nimport { platform } from 'os';\nimport { ChangeEvent, ChokidarOptions } from '../rollup/types';\nimport { Task } from './watch';\n\nexport class FileWatcher {\n\tprivate chokidarOptions: ChokidarOptions;\n\tprivate task: Task;\n\tprivate transformWatchers = new Map<string, FSWatcher>();\n\tprivate watcher: FSWatcher;\n\n\tconstructor(task: Task, chokidarOptions: ChokidarOptions) {\n\t\tthis.chokidarOptions = chokidarOptions;\n\t\tthis.task = task;\n\t\tthis.watcher = this.createWatcher(null);\n\t}\n\n\tclose() {\n\t\tthis.watcher.close();\n\t\tfor (const watcher of this.transformWatchers.values()) {\n\t\t\twatcher.close();\n\t\t}\n\t}\n\n\tunwatch(id: string) {\n\t\tthis.watcher.unwatch(id);\n\t\tconst transformWatcher = this.transformWatchers.get(id);\n\t\tif (transformWatcher) {\n\t\t\tthis.transformWatchers.delete(id);\n\t\t\ttransformWatcher.close();\n\t\t}\n\t}\n\n\twatch(id: string, isTransformDependency: boolean) {\n\t\tif (isTransformDependency) {\n\t\t\tconst watcher = this.transformWatchers.get(id) || this.createWatcher(id);\n\t\t\twatcher.add(id);\n\t\t\tthis.transformWatchers.set(id, watcher);\n\t\t} else {\n\t\t\tthis.watcher.add(id);\n\t\t}\n\t}\n\n\tprivate createWatcher(transformWatcherId: string | null): FSWatcher {\n\t\tconst task = this.task;\n\t\tconst isLinux = platform() === 'linux';\n\t\tconst isTransformDependency = transformWatcherId !== null;\n\t\tconst handleChange = (id: string, event: ChangeEvent) => {\n\t\t\tconst changedId = transformWatcherId || id;\n\t\t\tif (isLinux) {\n\t\t\t\t// unwatching and watching fixes an issue with chokidar where on certain systems,\n\t\t\t\t// a file that was unlinked and immediately recreated would create a change event\n\t\t\t\t// but then no longer any further events\n\t\t\t\twatcher.unwatch(changedId);\n\t\t\t\twatcher.add(changedId);\n\t\t\t}\n\t\t\ttask.invalidate(changedId, {isTransformDependency, event});\n\t\t};\n\t\tconst watcher = chokidar\n\t\t\t.watch([], this.chokidarOptions)\n\t\t\t.on('add', id => handleChange(id, 'create'))\n\t\t\t.on('change', id => handleChange(id, 'update'))\n\t\t\t.on('unlink', id => handleChange(id, 'delete'));\n\t\treturn watcher;\n\t}\n}\n","import * as path from 'path';\nimport createFilter from 'rollup-pluginutils/src/createFilter';\nimport { rollupInternal } from '../rollup/rollup';\nimport {\n\tChangeEvent,\n\tMergedRollupOptions,\n\tOutputOptions,\n\tRollupBuild,\n\tRollupCache,\n\tRollupWatcher,\n\tWatcherOptions\n} from '../rollup/types';\nimport { mergeOptions } from '../utils/options/mergeOptions';\nimport { GenericConfigObject } from '../utils/options/options';\nimport { FileWatcher } from './fileWatcher';\n\nconst eventsRewrites: Record<ChangeEvent, Record<ChangeEvent, ChangeEvent | 'buggy' | null>> = {\n\tcreate: {\n\t\tcreate: 'buggy',\n\t\tdelete: null, //delete file from map\n\t\tupdate: 'create'\n\t},\n\tdelete: {\n\t\tcreate: 'update',\n\t\tdelete: 'buggy',\n\t\tupdate: 'buggy'\n\t},\n\tupdate: {\n\t\tcreate: 'buggy',\n\t\tdelete: 'delete',\n\t\tupdate: 'update'\n\t}\n};\n\nexport class Watcher {\n\temitter: RollupWatcher;\n\n\tprivate buildDelay = 0;\n\tprivate buildTimeout: NodeJS.Timer | null = null;\n\tprivate invalidatedIds: Map<string, ChangeEvent> = new Map();\n\tprivate rerun = false;\n\tprivate running: boolean;\n\tprivate tasks: Task[];\n\n\tconstructor(configs: GenericConfigObject[], emitter: RollupWatcher) {\n\t\tthis.emitter = emitter;\n\t\temitter.close = this.close.bind(this);\n\t\tthis.tasks = configs.map(config => new Task(this, config));\n\t\tthis.buildDelay = configs.reduce(\n\t\t\t(buildDelay, { watch }: any) =>\n\t\t\t\twatch && typeof watch.buildDelay === 'number'\n\t\t\t\t\t? Math.max(buildDelay, (watch as WatcherOptions).buildDelay!)\n\t\t\t\t\t: buildDelay,\n\t\t\tthis.buildDelay\n\t\t);\n\t\tthis.running = true;\n\t\tprocess.nextTick(() => this.run());\n\t}\n\n\tclose() {\n\t\tif (this.buildTimeout) clearTimeout(this.buildTimeout);\n\t\tfor (const task of this.tasks) {\n\t\t\ttask.close();\n\t\t}\n\t\tthis.emitter.emit('close');\n\t\tthis.emitter.removeAllListeners();\n\t}\n\n\tinvalidate(file?: { event: ChangeEvent; id: string }) {\n\t\tif (file) {\n\t\t\tconst prevEvent = this.invalidatedIds.get(file.id);\n\t\t\tconst event = prevEvent ? eventsRewrites[prevEvent][file.event] : file.event;\n\n\t\t\tif (event === 'buggy') {\n\t\t\t\t//TODO: throws or warn? Currently just ignore, uses new event\n\t\t\t\tthis.invalidatedIds.set(file.id, file.event);\n\t\t\t} else if (event === null) {\n\t\t\t\tthis.invalidatedIds.delete(file.id);\n\t\t\t} else {\n\t\t\t\tthis.invalidatedIds.set(file.id, event);\n\t\t\t}\n\t\t}\n\t\tif (this.running) {\n\t\t\tthis.rerun = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.buildTimeout) clearTimeout(this.buildTimeout);\n\n\t\tthis.buildTimeout = setTimeout(() => {\n\t\t\tthis.buildTimeout = null;\n\t\t\tfor (const [id, event] of this.invalidatedIds.entries()) {\n\t\t\t\tthis.emitter.emit('change', id, { event });\n\t\t\t}\n\t\t\tthis.invalidatedIds.clear();\n\t\t\tthis.emitter.emit('restart');\n\t\t\tthis.run();\n\t\t}, this.buildDelay);\n\t}\n\n\tprivate async run() {\n\t\tthis.running = true;\n\t\tthis.emitter.emit('event', {\n\t\t\tcode: 'START'\n\t\t});\n\n\t\tfor (const task of this.tasks) {\n\t\t\tawait task.run();\n\t\t}\n\n\t\tthis.running = false;\n\t\tthis.emitter.emit('event', {\n\t\t\tcode: 'END'\n\t\t});\n\t\tif (this.rerun) {\n\t\t\tthis.rerun = false;\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n}\n\nexport class Task {\n\tcache: RollupCache = { modules: [] };\n\twatchFiles: string[] = [];\n\n\tprivate closed: boolean;\n\tprivate fileWatcher: FileWatcher;\n\tprivate filter: (id: string) => boolean;\n\tprivate invalidated = true;\n\tprivate options: MergedRollupOptions;\n\tprivate outputFiles: string[];\n\tprivate outputs: OutputOptions[];\n\tprivate skipWrite: boolean;\n\tprivate watched: Set<string>;\n\tprivate watcher: Watcher;\n\n\tconstructor(watcher: Watcher, config: GenericConfigObject) {\n\t\tthis.watcher = watcher;\n\t\tthis.closed = false;\n\t\tthis.watched = new Set();\n\n\t\tthis.skipWrite = Boolean(config.watch && (config.watch as GenericConfigObject).skipWrite);\n\t\tthis.options = mergeOptions(config);\n\t\tthis.outputs = this.options.output;\n\t\tthis.outputFiles = this.outputs.map(output => {\n\t\t\tif (output.file || output.dir) return path.resolve(output.file || output.dir!);\n\t\t\treturn undefined as any;\n\t\t});\n\n\t\tconst watchOptions: WatcherOptions = this.options.watch || {};\n\t\tthis.filter = createFilter(watchOptions.include, watchOptions.exclude);\n\t\tthis.fileWatcher = new FileWatcher(this, {\n\t\t\t...watchOptions.chokidar,\n\t\t\tdisableGlobbing: true,\n\t\t\tignoreInitial: true\n\t\t});\n\t}\n\n\tclose() {\n\t\tthis.closed = true;\n\t\tthis.fileWatcher.close();\n\t}\n\n\tinvalidate(id: string, details: { event: ChangeEvent; isTransformDependency?: boolean }) {\n\t\tthis.invalidated = true;\n\t\tif (details.isTransformDependency) {\n\t\t\tfor (const module of this.cache.modules) {\n\t\t\t\tif (module.transformDependencies.indexOf(id) === -1) continue;\n\t\t\t\t// effective invalidation\n\t\t\t\tmodule.originalCode = null as any;\n\t\t\t}\n\t\t}\n\t\tthis.watcher.invalidate({ id, event: details.event });\n\t}\n\n\tasync run(): Promise<void> {\n\t\tif (!this.invalidated) return;\n\t\tthis.invalidated = false;\n\n\t\tconst options = {\n\t\t\t...this.options,\n\t\t\tcache: this.cache\n\t\t};\n\n\t\tconst start = Date.now();\n\n\t\tthis.watcher.emitter.emit('event', {\n\t\t\tcode: 'BUNDLE_START',\n\t\t\tinput: this.options.input,\n\t\t\toutput: this.outputFiles\n\t\t});\n\t\tlet result: RollupBuild | null = null;\n\n\t\ttry {\n\t\t\tresult = await rollupInternal(options, this.watcher.emitter);\n\t\t\tif (this.closed) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.updateWatchedFiles(result);\n\t\t\tthis.skipWrite || (await Promise.all(this.outputs.map(output => result!.write(output))));\n\t\t\tthis.watcher.emitter.emit('event', {\n\t\t\t\tcode: 'BUNDLE_END',\n\t\t\t\tduration: Date.now() - start,\n\t\t\t\tinput: this.options.input,\n\t\t\t\toutput: this.outputFiles,\n\t\t\t\tresult\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tif (!this.closed) {\n\t\t\t\tif (Array.isArray(error.watchFiles)) {\n\t\t\t\t\tfor (const id of error.watchFiles) {\n\t\t\t\t\t\tthis.watchFile(id);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (error.id) {\n\t\t\t\t\tthis.cache.modules = this.cache.modules.filter(module => module.id !== error.id);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.watcher.emitter.emit('event', {\n\t\t\t\tcode: 'ERROR',\n\t\t\t\terror,\n\t\t\t\tresult\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate updateWatchedFiles(result: RollupBuild) {\n\t\tconst previouslyWatched = this.watched;\n\t\tthis.watched = new Set();\n\t\tthis.watchFiles = result.watchFiles;\n\t\tthis.cache = result.cache!;\n\t\tfor (const id of this.watchFiles) {\n\t\t\tthis.watchFile(id);\n\t\t}\n\t\tfor (const module of this.cache.modules) {\n\t\t\tfor (const depId of module.transformDependencies) {\n\t\t\t\tthis.watchFile(depId, true);\n\t\t\t}\n\t\t}\n\t\tfor (const id of previouslyWatched) {\n\t\t\tif (!this.watched.has(id)) {\n\t\t\t\tthis.fileWatcher.unwatch(id);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate watchFile(id: string, isTransformDependency = false) {\n\t\tif (!this.filter(id)) return;\n\t\tthis.watched.add(id);\n\n\t\tif (this.outputFiles.some(file => file === id)) {\n\t\t\tthrow new Error('Cannot import the generated bundle');\n\t\t}\n\n\t\t// this is necessary to ensure that any 'renamed' files\n\t\t// continue to be watched following an error\n\t\tthis.fileWatcher.watch(id, isTransformDependency);\n\t}\n}\n"],"names":["picomatch","utils","braces","resolve","mm","sep","platform","chokidar","mergeOptions","path.resolve","rollupInternal"],"mappings":"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"}